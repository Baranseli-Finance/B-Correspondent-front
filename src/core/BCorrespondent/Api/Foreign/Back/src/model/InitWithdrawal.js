/**
 * BCorrespondent. Tag (-). Commit (bb65df7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Balance from './Balance';
import WithdrawalHistory from './WithdrawalHistory';

/**
 * The InitWithdrawal model module.
 * @module model/InitWithdrawal
 * @version 1.2.1
 */
class InitWithdrawal {
    /**
     * Constructs a new <code>InitWithdrawal</code>.
     * @alias module:model/InitWithdrawal
     * @param history {module:model/WithdrawalHistory} 
     * @param walletBalances {Array.<module:model/Balance>} 
     */
    constructor(history, walletBalances) {

        InitWithdrawal.initialize(this, history, walletBalances);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, history, walletBalances) {
        obj['history'] = history;
        obj['walletBalances'] = walletBalances;
    }

    /**
     * Constructs a <code>InitWithdrawal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InitWithdrawal} obj Optional instance to populate.
     * @return {module:model/InitWithdrawal} The populated <code>InitWithdrawal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InitWithdrawal();

            if (data.hasOwnProperty('history')) {
                obj['history'] = WithdrawalHistory.constructFromObject(data['history']);
            }
            if (data.hasOwnProperty('walletBalances')) {
                obj['walletBalances'] = ApiClient.convertToType(data['walletBalances'], [Balance]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InitWithdrawal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InitWithdrawal</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InitWithdrawal.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `history`
        if (data['history']) { // data not null
            WithdrawalHistory.validateJSON(data['history']);
        }
        if (data['walletBalances']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['walletBalances'])) {
                throw new Error("Expected the field `walletBalances` to be an array in the JSON data but got " + data['walletBalances']);
            }
            // validate the optional field `walletBalances` (array)
            for (const item of data['walletBalances']) {
                Balance.validateJSON(item);
            };
        }

        return true;
    }

    /**
     * @return {module:model/WithdrawalHistory}
     */
    getHistory() {
        return this.history;
    }

    /**
     * @param {module:model/WithdrawalHistory} history
     */
    setHistory(history) {
        this['history'] = history;
    }
    /**
     * @return {Array.<module:model/Balance>}
     */
    getWalletBalances() {
        return this.walletBalances;
    }

    /**
     * @param {Array.<module:model/Balance>} walletBalances
     */
    setWalletBalances(walletBalances) {
        this['walletBalances'] = walletBalances;
    }

}

InitWithdrawal.RequiredProperties = ["history", "walletBalances"];

/**
 * @member {module:model/WithdrawalHistory} history
 */
InitWithdrawal.prototype['history'] = undefined;

/**
 * @member {Array.<module:model/Balance>} walletBalances
 */
InitWithdrawal.prototype['walletBalances'] = undefined;






export default InitWithdrawal;