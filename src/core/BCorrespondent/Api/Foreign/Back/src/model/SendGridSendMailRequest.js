/**
 * BCorrespondent. Tag (-). Commit (bb65df7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SendGridSendMailRequest model module.
 * @module model/SendGridSendMailRequest
 * @version 1.2.1
 */
class SendGridSendMailRequest {
    /**
     * Constructs a new <code>SendGridSendMailRequest</code>.
     * @alias module:model/SendGridSendMailRequest
     * @param body {String} 
     * @param from {String} 
     * @param personalization {String} 
     * @param subject {String} 
     */
    constructor(body, from, personalization, subject) {

        SendGridSendMailRequest.initialize(this, body, from, personalization, subject);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, body, from, personalization, subject) {
        obj['body'] = body;
        obj['from'] = from;
        obj['personalization'] = personalization;
        obj['subject'] = subject;
    }

    /**
     * Constructs a <code>SendGridSendMailRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendGridSendMailRequest} obj Optional instance to populate.
     * @return {module:model/SendGridSendMailRequest} The populated <code>SendGridSendMailRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendGridSendMailRequest();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('personalization')) {
                obj['personalization'] = ApiClient.convertToType(data['personalization'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendGridSendMailRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendGridSendMailRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SendGridSendMailRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        // ensure the json data is a string
        if (data['personalization'] && !(typeof data['personalization'] === 'string' || data['personalization'] instanceof String)) {
            throw new Error("Expected the field `personalization` to be a primitive type in the JSON string but got " + data['personalization']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }

        return true;
    }

    /**
     * @return {String}
     */
    getBody() {
        return this.body;
    }

    /**
     * @param {String} body
     */
    setBody(body) {
        this['body'] = body;
    }
    /**
     * @return {String}
     */
    getFrom() {
        return this.from;
    }

    /**
     * @param {String} from
     */
    setFrom(from) {
        this['from'] = from;
    }
    /**
     * @return {String}
     */
    getPersonalization() {
        return this.personalization;
    }

    /**
     * @param {String} personalization
     */
    setPersonalization(personalization) {
        this['personalization'] = personalization;
    }
    /**
     * @return {String}
     */
    getSubject() {
        return this.subject;
    }

    /**
     * @param {String} subject
     */
    setSubject(subject) {
        this['subject'] = subject;
    }

}

SendGridSendMailRequest.RequiredProperties = ["body", "from", "personalization", "subject"];

/**
 * @member {String} body
 */
SendGridSendMailRequest.prototype['body'] = undefined;

/**
 * @member {String} from
 */
SendGridSendMailRequest.prototype['from'] = undefined;

/**
 * @member {String} personalization
 */
SendGridSendMailRequest.prototype['personalization'] = undefined;

/**
 * @member {String} subject
 */
SendGridSendMailRequest.prototype['subject'] = undefined;






export default SendGridSendMailRequest;