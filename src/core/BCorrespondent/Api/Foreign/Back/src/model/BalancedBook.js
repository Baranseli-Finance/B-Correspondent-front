/**
 * BCorrespondent. Tag (-). Commit (bb65df7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BalancedBookInstitution from './BalancedBookInstitution';

/**
 * The BalancedBook model module.
 * @module model/BalancedBook
 * @version 1.2.1
 */
class BalancedBook {
    /**
     * Constructs a new <code>BalancedBook</code>.
     * @alias module:model/BalancedBook
     * @param from {String} 
     * @param institutions {Array.<module:model/BalancedBookInstitution>} 
     * @param to {String} 
     */
    constructor(from, institutions, to) {

        BalancedBook.initialize(this, from, institutions, to);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, from, institutions, to) {
        obj['from'] = from;
        obj['institutions'] = institutions;
        obj['to'] = to;
    }

    /**
     * Constructs a <code>BalancedBook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BalancedBook} obj Optional instance to populate.
     * @return {module:model/BalancedBook} The populated <code>BalancedBook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BalancedBook();

            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('institutions')) {
                obj['institutions'] = ApiClient.convertToType(data['institutions'], [BalancedBookInstitution]);
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BalancedBook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BalancedBook</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BalancedBook.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        if (data['institutions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['institutions'])) {
                throw new Error("Expected the field `institutions` to be an array in the JSON data but got " + data['institutions']);
            }
            // validate the optional field `institutions` (array)
            for (const item of data['institutions']) {
                BalancedBookInstitution.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }

        return true;
    }

    /**
     * @return {String}
     */
    getFrom() {
        return this.from;
    }

    /**
     * @param {String} from
     */
    setFrom(from) {
        this['from'] = from;
    }
    /**
     * @return {Array.<module:model/BalancedBookInstitution>}
     */
    getInstitutions() {
        return this.institutions;
    }

    /**
     * @param {Array.<module:model/BalancedBookInstitution>} institutions
     */
    setInstitutions(institutions) {
        this['institutions'] = institutions;
    }
    /**
     * @return {String}
     */
    getTo() {
        return this.to;
    }

    /**
     * @param {String} to
     */
    setTo(to) {
        this['to'] = to;
    }

}

BalancedBook.RequiredProperties = ["from", "institutions", "to"];

/**
 * @member {String} from
 */
BalancedBook.prototype['from'] = undefined;

/**
 * @member {Array.<module:model/BalancedBookInstitution>} institutions
 */
BalancedBook.prototype['institutions'] = undefined;

/**
 * @member {String} to
 */
BalancedBook.prototype['to'] = undefined;






export default BalancedBook;