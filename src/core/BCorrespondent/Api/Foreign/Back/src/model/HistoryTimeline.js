/**
 * BCorrespondent. Tag (-). Commit (bb65df7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GapItem from './GapItem';

/**
 * The HistoryTimeline model module.
 * @module model/HistoryTimeline
 * @version 1.2.1
 */
class HistoryTimeline {
    /**
     * Constructs a new <code>HistoryTimeline</code>.
     * @alias module:model/HistoryTimeline
     * @param institution {String} 
     * @param timeline {Array.<module:model/GapItem>} 
     */
    constructor(institution, timeline) {

        HistoryTimeline.initialize(this, institution, timeline);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, institution, timeline) {
        obj['institution'] = institution;
        obj['timeline'] = timeline;
    }

    /**
     * Constructs a <code>HistoryTimeline</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryTimeline} obj Optional instance to populate.
     * @return {module:model/HistoryTimeline} The populated <code>HistoryTimeline</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryTimeline();

            if (data.hasOwnProperty('institution')) {
                obj['institution'] = ApiClient.convertToType(data['institution'], 'String');
            }
            if (data.hasOwnProperty('timeline')) {
                obj['timeline'] = ApiClient.convertToType(data['timeline'], [GapItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryTimeline</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryTimeline</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HistoryTimeline.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['institution'] && !(typeof data['institution'] === 'string' || data['institution'] instanceof String)) {
            throw new Error("Expected the field `institution` to be a primitive type in the JSON string but got " + data['institution']);
        }
        if (data['timeline']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['timeline'])) {
                throw new Error("Expected the field `timeline` to be an array in the JSON data but got " + data['timeline']);
            }
            // validate the optional field `timeline` (array)
            for (const item of data['timeline']) {
                GapItem.validateJSON(item);
            };
        }

        return true;
    }

    /**
     * @return {String}
     */
    getInstitution() {
        return this.institution;
    }

    /**
     * @param {String} institution
     */
    setInstitution(institution) {
        this['institution'] = institution;
    }
    /**
     * @return {Array.<module:model/GapItem>}
     */
    getTimeline() {
        return this.timeline;
    }

    /**
     * @param {Array.<module:model/GapItem>} timeline
     */
    setTimeline(timeline) {
        this['timeline'] = timeline;
    }

}

HistoryTimeline.RequiredProperties = ["institution", "timeline"];

/**
 * @member {String} institution
 */
HistoryTimeline.prototype['institution'] = undefined;

/**
 * @member {Array.<module:model/GapItem>} timeline
 */
HistoryTimeline.prototype['timeline'] = undefined;






export default HistoryTimeline;