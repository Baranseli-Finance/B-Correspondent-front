/**
 * BCorrespondent. Tag (-). Commit (bb65df7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';

/**
 * The TimelineTransaction model module.
 * @module model/TimelineTransaction
 * @version 1.2.1
 */
class TimelineTransaction {
    /**
     * Constructs a new <code>TimelineTransaction</code>.
     * @alias module:model/TimelineTransaction
     * @param amount {Number} 
     * @param correspondentBank {String} 
     * @param correspondentBankSwiftSepaCode {String} 
     * @param currency {module:model/Currency} 
     * @param ident {String} 
     * @param senderAddress {String} 
     * @param senderBank {String} 
     * @param senderBankAccount {String} 
     * @param senderName {String} 
     * @param senderPhoneNumber {String} 
     * @param swiftSepaCode {String} 
     */
    constructor(amount, correspondentBank, correspondentBankSwiftSepaCode, currency, ident, senderAddress, senderBank, senderBankAccount, senderName, senderPhoneNumber, swiftSepaCode) {

        TimelineTransaction.initialize(this, amount, correspondentBank, correspondentBankSwiftSepaCode, currency, ident, senderAddress, senderBank, senderBankAccount, senderName, senderPhoneNumber, swiftSepaCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, correspondentBank, correspondentBankSwiftSepaCode, currency, ident, senderAddress, senderBank, senderBankAccount, senderName, senderPhoneNumber, swiftSepaCode) {
        obj['amount'] = amount;
        obj['correspondentBank'] = correspondentBank;
        obj['correspondentBankSwiftSepaCode'] = correspondentBankSwiftSepaCode;
        obj['currency'] = currency;
        obj['ident'] = ident;
        obj['senderAddress'] = senderAddress;
        obj['senderBank'] = senderBank;
        obj['senderBankAccount'] = senderBankAccount;
        obj['senderName'] = senderName;
        obj['senderPhoneNumber'] = senderPhoneNumber;
        obj['swiftSepaCode'] = swiftSepaCode;
    }

    /**
     * Constructs a <code>TimelineTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimelineTransaction} obj Optional instance to populate.
     * @return {module:model/TimelineTransaction} The populated <code>TimelineTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimelineTransaction();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('correspondentBank')) {
                obj['correspondentBank'] = ApiClient.convertToType(data['correspondentBank'], 'String');
            }
            if (data.hasOwnProperty('correspondentBankSwiftSepaCode')) {
                obj['correspondentBankSwiftSepaCode'] = ApiClient.convertToType(data['correspondentBankSwiftSepaCode'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = Currency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('ident')) {
                obj['ident'] = ApiClient.convertToType(data['ident'], 'String');
            }
            if (data.hasOwnProperty('senderAddress')) {
                obj['senderAddress'] = ApiClient.convertToType(data['senderAddress'], 'String');
            }
            if (data.hasOwnProperty('senderBank')) {
                obj['senderBank'] = ApiClient.convertToType(data['senderBank'], 'String');
            }
            if (data.hasOwnProperty('senderBankAccount')) {
                obj['senderBankAccount'] = ApiClient.convertToType(data['senderBankAccount'], 'String');
            }
            if (data.hasOwnProperty('senderName')) {
                obj['senderName'] = ApiClient.convertToType(data['senderName'], 'String');
            }
            if (data.hasOwnProperty('senderPhoneNumber')) {
                obj['senderPhoneNumber'] = ApiClient.convertToType(data['senderPhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('swiftSepaCode')) {
                obj['swiftSepaCode'] = ApiClient.convertToType(data['swiftSepaCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimelineTransaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimelineTransaction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TimelineTransaction.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['correspondentBank'] && !(typeof data['correspondentBank'] === 'string' || data['correspondentBank'] instanceof String)) {
            throw new Error("Expected the field `correspondentBank` to be a primitive type in the JSON string but got " + data['correspondentBank']);
        }
        // ensure the json data is a string
        if (data['correspondentBankSwiftSepaCode'] && !(typeof data['correspondentBankSwiftSepaCode'] === 'string' || data['correspondentBankSwiftSepaCode'] instanceof String)) {
            throw new Error("Expected the field `correspondentBankSwiftSepaCode` to be a primitive type in the JSON string but got " + data['correspondentBankSwiftSepaCode']);
        }
        // ensure the json data is a string
        if (data['ident'] && !(typeof data['ident'] === 'string' || data['ident'] instanceof String)) {
            throw new Error("Expected the field `ident` to be a primitive type in the JSON string but got " + data['ident']);
        }
        // ensure the json data is a string
        if (data['senderAddress'] && !(typeof data['senderAddress'] === 'string' || data['senderAddress'] instanceof String)) {
            throw new Error("Expected the field `senderAddress` to be a primitive type in the JSON string but got " + data['senderAddress']);
        }
        // ensure the json data is a string
        if (data['senderBank'] && !(typeof data['senderBank'] === 'string' || data['senderBank'] instanceof String)) {
            throw new Error("Expected the field `senderBank` to be a primitive type in the JSON string but got " + data['senderBank']);
        }
        // ensure the json data is a string
        if (data['senderBankAccount'] && !(typeof data['senderBankAccount'] === 'string' || data['senderBankAccount'] instanceof String)) {
            throw new Error("Expected the field `senderBankAccount` to be a primitive type in the JSON string but got " + data['senderBankAccount']);
        }
        // ensure the json data is a string
        if (data['senderName'] && !(typeof data['senderName'] === 'string' || data['senderName'] instanceof String)) {
            throw new Error("Expected the field `senderName` to be a primitive type in the JSON string but got " + data['senderName']);
        }
        // ensure the json data is a string
        if (data['senderPhoneNumber'] && !(typeof data['senderPhoneNumber'] === 'string' || data['senderPhoneNumber'] instanceof String)) {
            throw new Error("Expected the field `senderPhoneNumber` to be a primitive type in the JSON string but got " + data['senderPhoneNumber']);
        }
        // ensure the json data is a string
        if (data['swiftSepaCode'] && !(typeof data['swiftSepaCode'] === 'string' || data['swiftSepaCode'] instanceof String)) {
            throw new Error("Expected the field `swiftSepaCode` to be a primitive type in the JSON string but got " + data['swiftSepaCode']);
        }

        return true;
    }

    /**
     * @return {Number}
     */
    getAmount() {
        return this.amount;
    }

    /**
     * @param {Number} amount
     */
    setAmount(amount) {
        this['amount'] = amount;
    }
    /**
     * @return {String}
     */
    getCorrespondentBank() {
        return this.correspondentBank;
    }

    /**
     * @param {String} correspondentBank
     */
    setCorrespondentBank(correspondentBank) {
        this['correspondentBank'] = correspondentBank;
    }
    /**
     * @return {String}
     */
    getCorrespondentBankSwiftSepaCode() {
        return this.correspondentBankSwiftSepaCode;
    }

    /**
     * @param {String} correspondentBankSwiftSepaCode
     */
    setCorrespondentBankSwiftSepaCode(correspondentBankSwiftSepaCode) {
        this['correspondentBankSwiftSepaCode'] = correspondentBankSwiftSepaCode;
    }
    /**
     * @return {module:model/Currency}
     */
    getCurrency() {
        return this.currency;
    }

    /**
     * @param {module:model/Currency} currency
     */
    setCurrency(currency) {
        this['currency'] = currency;
    }
    /**
     * @return {String}
     */
    getIdent() {
        return this.ident;
    }

    /**
     * @param {String} ident
     */
    setIdent(ident) {
        this['ident'] = ident;
    }
    /**
     * @return {String}
     */
    getSenderAddress() {
        return this.senderAddress;
    }

    /**
     * @param {String} senderAddress
     */
    setSenderAddress(senderAddress) {
        this['senderAddress'] = senderAddress;
    }
    /**
     * @return {String}
     */
    getSenderBank() {
        return this.senderBank;
    }

    /**
     * @param {String} senderBank
     */
    setSenderBank(senderBank) {
        this['senderBank'] = senderBank;
    }
    /**
     * @return {String}
     */
    getSenderBankAccount() {
        return this.senderBankAccount;
    }

    /**
     * @param {String} senderBankAccount
     */
    setSenderBankAccount(senderBankAccount) {
        this['senderBankAccount'] = senderBankAccount;
    }
    /**
     * @return {String}
     */
    getSenderName() {
        return this.senderName;
    }

    /**
     * @param {String} senderName
     */
    setSenderName(senderName) {
        this['senderName'] = senderName;
    }
    /**
     * @return {String}
     */
    getSenderPhoneNumber() {
        return this.senderPhoneNumber;
    }

    /**
     * @param {String} senderPhoneNumber
     */
    setSenderPhoneNumber(senderPhoneNumber) {
        this['senderPhoneNumber'] = senderPhoneNumber;
    }
    /**
     * @return {String}
     */
    getSwiftSepaCode() {
        return this.swiftSepaCode;
    }

    /**
     * @param {String} swiftSepaCode
     */
    setSwiftSepaCode(swiftSepaCode) {
        this['swiftSepaCode'] = swiftSepaCode;
    }

}

TimelineTransaction.RequiredProperties = ["amount", "correspondentBank", "correspondentBankSwiftSepaCode", "currency", "ident", "senderAddress", "senderBank", "senderBankAccount", "senderName", "senderPhoneNumber", "swiftSepaCode"];

/**
 * @member {Number} amount
 */
TimelineTransaction.prototype['amount'] = undefined;

/**
 * @member {String} correspondentBank
 */
TimelineTransaction.prototype['correspondentBank'] = undefined;

/**
 * @member {String} correspondentBankSwiftSepaCode
 */
TimelineTransaction.prototype['correspondentBankSwiftSepaCode'] = undefined;

/**
 * @member {module:model/Currency} currency
 */
TimelineTransaction.prototype['currency'] = undefined;

/**
 * @member {String} ident
 */
TimelineTransaction.prototype['ident'] = undefined;

/**
 * @member {String} senderAddress
 */
TimelineTransaction.prototype['senderAddress'] = undefined;

/**
 * @member {String} senderBank
 */
TimelineTransaction.prototype['senderBank'] = undefined;

/**
 * @member {String} senderBankAccount
 */
TimelineTransaction.prototype['senderBankAccount'] = undefined;

/**
 * @member {String} senderName
 */
TimelineTransaction.prototype['senderName'] = undefined;

/**
 * @member {String} senderPhoneNumber
 */
TimelineTransaction.prototype['senderPhoneNumber'] = undefined;

/**
 * @member {String} swiftSepaCode
 */
TimelineTransaction.prototype['swiftSepaCode'] = undefined;






export default TimelineTransaction;