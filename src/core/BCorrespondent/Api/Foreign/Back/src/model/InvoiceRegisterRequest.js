/**
 * BCorrespondent. Tag (-). Commit (bb65df7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';
import Fee from './Fee';

/**
 * The InvoiceRegisterRequest model module.
 * @module model/InvoiceRegisterRequest
 * @version 1.2.1
 */
class InvoiceRegisterRequest {
    /**
     * Constructs a new <code>InvoiceRegisterRequest</code>.
     * @alias module:model/InvoiceRegisterRequest
     * @param amount {Number} 
     * @param buyer {String} 
     * @param buyerAddress {String} 
     * @param countryISOCode {String} 
     * @param createdAt {String} 
     * @param currency {module:model/Currency} 
     * @param customerIdent {String} 
     * @param fee {module:model/Fee} 
     * @param invoiceIdent {String} 
     * @param paymentDescription {String} 
     * @param seller {String} 
     * @param sellerAddress {String} 
     * @param vat {Number} 
     */
    constructor(amount, buyer, buyerAddress, countryISOCode, createdAt, currency, customerIdent, fee, invoiceIdent, paymentDescription, seller, sellerAddress, vat) {

        InvoiceRegisterRequest.initialize(this, amount, buyer, buyerAddress, countryISOCode, createdAt, currency, customerIdent, fee, invoiceIdent, paymentDescription, seller, sellerAddress, vat);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, buyer, buyerAddress, countryISOCode, createdAt, currency, customerIdent, fee, invoiceIdent, paymentDescription, seller, sellerAddress, vat) {
        obj['amount'] = amount;
        obj['buyer'] = buyer;
        obj['buyerAddress'] = buyerAddress;
        obj['countryISOCode'] = countryISOCode;
        obj['createdAt'] = createdAt;
        obj['currency'] = currency;
        obj['customerIdent'] = customerIdent;
        obj['fee'] = fee;
        obj['invoiceIdent'] = invoiceIdent;
        obj['paymentDescription'] = paymentDescription;
        obj['seller'] = seller;
        obj['sellerAddress'] = sellerAddress;
        obj['vat'] = vat;
    }

    /**
     * Constructs a <code>InvoiceRegisterRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceRegisterRequest} obj Optional instance to populate.
     * @return {module:model/InvoiceRegisterRequest} The populated <code>InvoiceRegisterRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceRegisterRequest();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('buyer')) {
                obj['buyer'] = ApiClient.convertToType(data['buyer'], 'String');
            }
            if (data.hasOwnProperty('buyerAddress')) {
                obj['buyerAddress'] = ApiClient.convertToType(data['buyerAddress'], 'String');
            }
            if (data.hasOwnProperty('buyerPhoneNumber')) {
                obj['buyerPhoneNumber'] = ApiClient.convertToType(data['buyerPhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('buyerTaxId')) {
                obj['buyerTaxId'] = ApiClient.convertToType(data['buyerTaxId'], 'String');
            }
            if (data.hasOwnProperty('countryISOCode')) {
                obj['countryISOCode'] = ApiClient.convertToType(data['countryISOCode'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = Currency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('customerIdent')) {
                obj['customerIdent'] = ApiClient.convertToType(data['customerIdent'], 'String');
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = Fee.constructFromObject(data['fee']);
            }
            if (data.hasOwnProperty('invoiceIdent')) {
                obj['invoiceIdent'] = ApiClient.convertToType(data['invoiceIdent'], 'String');
            }
            if (data.hasOwnProperty('paymentDescription')) {
                obj['paymentDescription'] = ApiClient.convertToType(data['paymentDescription'], 'String');
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = ApiClient.convertToType(data['seller'], 'String');
            }
            if (data.hasOwnProperty('sellerAddress')) {
                obj['sellerAddress'] = ApiClient.convertToType(data['sellerAddress'], 'String');
            }
            if (data.hasOwnProperty('sellerPhoneNumber')) {
                obj['sellerPhoneNumber'] = ApiClient.convertToType(data['sellerPhoneNumber'], 'String');
            }
            if (data.hasOwnProperty('sellerTaxId')) {
                obj['sellerTaxId'] = ApiClient.convertToType(data['sellerTaxId'], 'String');
            }
            if (data.hasOwnProperty('vat')) {
                obj['vat'] = ApiClient.convertToType(data['vat'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceRegisterRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceRegisterRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InvoiceRegisterRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['buyer'] && !(typeof data['buyer'] === 'string' || data['buyer'] instanceof String)) {
            throw new Error("Expected the field `buyer` to be a primitive type in the JSON string but got " + data['buyer']);
        }
        // ensure the json data is a string
        if (data['buyerAddress'] && !(typeof data['buyerAddress'] === 'string' || data['buyerAddress'] instanceof String)) {
            throw new Error("Expected the field `buyerAddress` to be a primitive type in the JSON string but got " + data['buyerAddress']);
        }
        // ensure the json data is a string
        if (data['buyerPhoneNumber'] && !(typeof data['buyerPhoneNumber'] === 'string' || data['buyerPhoneNumber'] instanceof String)) {
            throw new Error("Expected the field `buyerPhoneNumber` to be a primitive type in the JSON string but got " + data['buyerPhoneNumber']);
        }
        // ensure the json data is a string
        if (data['buyerTaxId'] && !(typeof data['buyerTaxId'] === 'string' || data['buyerTaxId'] instanceof String)) {
            throw new Error("Expected the field `buyerTaxId` to be a primitive type in the JSON string but got " + data['buyerTaxId']);
        }
        // ensure the json data is a string
        if (data['countryISOCode'] && !(typeof data['countryISOCode'] === 'string' || data['countryISOCode'] instanceof String)) {
            throw new Error("Expected the field `countryISOCode` to be a primitive type in the JSON string but got " + data['countryISOCode']);
        }
        // ensure the json data is a string
        if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
            throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
        }
        // ensure the json data is a string
        if (data['customerIdent'] && !(typeof data['customerIdent'] === 'string' || data['customerIdent'] instanceof String)) {
            throw new Error("Expected the field `customerIdent` to be a primitive type in the JSON string but got " + data['customerIdent']);
        }
        // ensure the json data is a string
        if (data['invoiceIdent'] && !(typeof data['invoiceIdent'] === 'string' || data['invoiceIdent'] instanceof String)) {
            throw new Error("Expected the field `invoiceIdent` to be a primitive type in the JSON string but got " + data['invoiceIdent']);
        }
        // ensure the json data is a string
        if (data['paymentDescription'] && !(typeof data['paymentDescription'] === 'string' || data['paymentDescription'] instanceof String)) {
            throw new Error("Expected the field `paymentDescription` to be a primitive type in the JSON string but got " + data['paymentDescription']);
        }
        // ensure the json data is a string
        if (data['seller'] && !(typeof data['seller'] === 'string' || data['seller'] instanceof String)) {
            throw new Error("Expected the field `seller` to be a primitive type in the JSON string but got " + data['seller']);
        }
        // ensure the json data is a string
        if (data['sellerAddress'] && !(typeof data['sellerAddress'] === 'string' || data['sellerAddress'] instanceof String)) {
            throw new Error("Expected the field `sellerAddress` to be a primitive type in the JSON string but got " + data['sellerAddress']);
        }
        // ensure the json data is a string
        if (data['sellerPhoneNumber'] && !(typeof data['sellerPhoneNumber'] === 'string' || data['sellerPhoneNumber'] instanceof String)) {
            throw new Error("Expected the field `sellerPhoneNumber` to be a primitive type in the JSON string but got " + data['sellerPhoneNumber']);
        }
        // ensure the json data is a string
        if (data['sellerTaxId'] && !(typeof data['sellerTaxId'] === 'string' || data['sellerTaxId'] instanceof String)) {
            throw new Error("Expected the field `sellerTaxId` to be a primitive type in the JSON string but got " + data['sellerTaxId']);
        }

        return true;
    }

    /**
     * @return {Number}
     */
    getAmount() {
        return this.amount;
    }

    /**
     * @param {Number} amount
     */
    setAmount(amount) {
        this['amount'] = amount;
    }
    /**
     * @return {String}
     */
    getBuyer() {
        return this.buyer;
    }

    /**
     * @param {String} buyer
     */
    setBuyer(buyer) {
        this['buyer'] = buyer;
    }
    /**
     * @return {String}
     */
    getBuyerAddress() {
        return this.buyerAddress;
    }

    /**
     * @param {String} buyerAddress
     */
    setBuyerAddress(buyerAddress) {
        this['buyerAddress'] = buyerAddress;
    }
    /**
     * @return {String}
     */
    getBuyerPhoneNumber() {
        return this.buyerPhoneNumber;
    }

    /**
     * @param {String} buyerPhoneNumber
     */
    setBuyerPhoneNumber(buyerPhoneNumber) {
        this['buyerPhoneNumber'] = buyerPhoneNumber;
    }
    /**
     * @return {String}
     */
    getBuyerTaxId() {
        return this.buyerTaxId;
    }

    /**
     * @param {String} buyerTaxId
     */
    setBuyerTaxId(buyerTaxId) {
        this['buyerTaxId'] = buyerTaxId;
    }
    /**
     * @return {String}
     */
    getCountryISOCode() {
        return this.countryISOCode;
    }

    /**
     * @param {String} countryISOCode
     */
    setCountryISOCode(countryISOCode) {
        this['countryISOCode'] = countryISOCode;
    }
    /**
     * @return {String}
     */
    getCreatedAt() {
        return this.createdAt;
    }

    /**
     * @param {String} createdAt
     */
    setCreatedAt(createdAt) {
        this['createdAt'] = createdAt;
    }
    /**
     * @return {module:model/Currency}
     */
    getCurrency() {
        return this.currency;
    }

    /**
     * @param {module:model/Currency} currency
     */
    setCurrency(currency) {
        this['currency'] = currency;
    }
    /**
     * @return {String}
     */
    getCustomerIdent() {
        return this.customerIdent;
    }

    /**
     * @param {String} customerIdent
     */
    setCustomerIdent(customerIdent) {
        this['customerIdent'] = customerIdent;
    }
    /**
     * @return {module:model/Fee}
     */
    getFee() {
        return this.fee;
    }

    /**
     * @param {module:model/Fee} fee
     */
    setFee(fee) {
        this['fee'] = fee;
    }
    /**
     * @return {String}
     */
    getInvoiceIdent() {
        return this.invoiceIdent;
    }

    /**
     * @param {String} invoiceIdent
     */
    setInvoiceIdent(invoiceIdent) {
        this['invoiceIdent'] = invoiceIdent;
    }
    /**
     * @return {String}
     */
    getPaymentDescription() {
        return this.paymentDescription;
    }

    /**
     * @param {String} paymentDescription
     */
    setPaymentDescription(paymentDescription) {
        this['paymentDescription'] = paymentDescription;
    }
    /**
     * @return {String}
     */
    getSeller() {
        return this.seller;
    }

    /**
     * @param {String} seller
     */
    setSeller(seller) {
        this['seller'] = seller;
    }
    /**
     * @return {String}
     */
    getSellerAddress() {
        return this.sellerAddress;
    }

    /**
     * @param {String} sellerAddress
     */
    setSellerAddress(sellerAddress) {
        this['sellerAddress'] = sellerAddress;
    }
    /**
     * @return {String}
     */
    getSellerPhoneNumber() {
        return this.sellerPhoneNumber;
    }

    /**
     * @param {String} sellerPhoneNumber
     */
    setSellerPhoneNumber(sellerPhoneNumber) {
        this['sellerPhoneNumber'] = sellerPhoneNumber;
    }
    /**
     * @return {String}
     */
    getSellerTaxId() {
        return this.sellerTaxId;
    }

    /**
     * @param {String} sellerTaxId
     */
    setSellerTaxId(sellerTaxId) {
        this['sellerTaxId'] = sellerTaxId;
    }
    /**
     * @return {Number}
     */
    getVat() {
        return this.vat;
    }

    /**
     * @param {Number} vat
     */
    setVat(vat) {
        this['vat'] = vat;
    }

}

InvoiceRegisterRequest.RequiredProperties = ["amount", "buyer", "buyerAddress", "countryISOCode", "createdAt", "currency", "customerIdent", "fee", "invoiceIdent", "paymentDescription", "seller", "sellerAddress", "vat"];

/**
 * @member {Number} amount
 */
InvoiceRegisterRequest.prototype['amount'] = undefined;

/**
 * @member {String} buyer
 */
InvoiceRegisterRequest.prototype['buyer'] = undefined;

/**
 * @member {String} buyerAddress
 */
InvoiceRegisterRequest.prototype['buyerAddress'] = undefined;

/**
 * @member {String} buyerPhoneNumber
 */
InvoiceRegisterRequest.prototype['buyerPhoneNumber'] = undefined;

/**
 * @member {String} buyerTaxId
 */
InvoiceRegisterRequest.prototype['buyerTaxId'] = undefined;

/**
 * @member {String} countryISOCode
 */
InvoiceRegisterRequest.prototype['countryISOCode'] = undefined;

/**
 * @member {String} createdAt
 */
InvoiceRegisterRequest.prototype['createdAt'] = undefined;

/**
 * @member {module:model/Currency} currency
 */
InvoiceRegisterRequest.prototype['currency'] = undefined;

/**
 * @member {String} customerIdent
 */
InvoiceRegisterRequest.prototype['customerIdent'] = undefined;

/**
 * @member {module:model/Fee} fee
 */
InvoiceRegisterRequest.prototype['fee'] = undefined;

/**
 * @member {String} invoiceIdent
 */
InvoiceRegisterRequest.prototype['invoiceIdent'] = undefined;

/**
 * @member {String} paymentDescription
 */
InvoiceRegisterRequest.prototype['paymentDescription'] = undefined;

/**
 * @member {String} seller
 */
InvoiceRegisterRequest.prototype['seller'] = undefined;

/**
 * @member {String} sellerAddress
 */
InvoiceRegisterRequest.prototype['sellerAddress'] = undefined;

/**
 * @member {String} sellerPhoneNumber
 */
InvoiceRegisterRequest.prototype['sellerPhoneNumber'] = undefined;

/**
 * @member {String} sellerTaxId
 */
InvoiceRegisterRequest.prototype['sellerTaxId'] = undefined;

/**
 * @member {Number} vat
 */
InvoiceRegisterRequest.prototype['vat'] = undefined;






export default InvoiceRegisterRequest;