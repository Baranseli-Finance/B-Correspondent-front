/**
 * BCorrespondent. Tag (-). Commit (bb65df7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvoiceSince model module.
 * @module model/InvoiceSince
 * @version 1.2.1
 */
class InvoiceSince {
    /**
     * Constructs a new <code>InvoiceSince</code>.
     * @alias module:model/InvoiceSince
     * @param day {Number} 
     * @param month {Number} 
     * @param year {Number} 
     */
    constructor(day, month, year) {

        InvoiceSince.initialize(this, day, month, year);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, day, month, year) {
        obj['day'] = day;
        obj['month'] = month;
        obj['year'] = year;
    }

    /**
     * Constructs a <code>InvoiceSince</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceSince} obj Optional instance to populate.
     * @return {module:model/InvoiceSince} The populated <code>InvoiceSince</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceSince();

            if (data.hasOwnProperty('day')) {
                obj['day'] = ApiClient.convertToType(data['day'], 'Number');
            }
            if (data.hasOwnProperty('month')) {
                obj['month'] = ApiClient.convertToType(data['month'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceSince</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceSince</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InvoiceSince.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }

    /**
     * minimum: -9223372036854775808
     * maximum: 9223372036854775807
     * @return {Number}
     */
    getDay() {
        return this.day;
    }

    /**
     * @param {Number} day
     */
    setDay(day) {
        this['day'] = day;
    }
    /**
     * minimum: -9223372036854775808
     * maximum: 9223372036854775807
     * @return {Number}
     */
    getMonth() {
        return this.month;
    }

    /**
     * @param {Number} month
     */
    setMonth(month) {
        this['month'] = month;
    }
    /**
     * minimum: -9223372036854775808
     * maximum: 9223372036854775807
     * @return {Number}
     */
    getYear() {
        return this.year;
    }

    /**
     * @param {Number} year
     */
    setYear(year) {
        this['year'] = year;
    }

}

InvoiceSince.RequiredProperties = ["day", "month", "year"];

/**
 * @member {Number} day
 */
InvoiceSince.prototype['day'] = undefined;

/**
 * @member {Number} month
 */
InvoiceSince.prototype['month'] = undefined;

/**
 * @member {Number} year
 */
InvoiceSince.prototype['year'] = undefined;






export default InvoiceSince;