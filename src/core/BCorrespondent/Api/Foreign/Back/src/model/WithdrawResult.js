/**
 * BCorrespondent. Tag (-). Commit (bb65df7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WithdrawResultStatus from './WithdrawResultStatus';

/**
 * The WithdrawResult model module.
 * @module model/WithdrawResult
 * @version 1.2.1
 */
class WithdrawResult {
    /**
     * Constructs a new <code>WithdrawResult</code>.
     * @alias module:model/WithdrawResult
     * @param status {module:model/WithdrawResultStatus} 
     */
    constructor(status) {

        WithdrawResult.initialize(this, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status) {
        obj['status'] = status;
    }

    /**
     * Constructs a <code>WithdrawResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WithdrawResult} obj Optional instance to populate.
     * @return {module:model/WithdrawResult} The populated <code>WithdrawResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WithdrawResult();

            if (data.hasOwnProperty('frozenFunds')) {
                obj['frozenFunds'] = ApiClient.convertToType(data['frozenFunds'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = WithdrawResultStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WithdrawResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WithdrawResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WithdrawResult.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }

    /**
     * @return {Number}
     */
    getFrozenFunds() {
        return this.frozenFunds;
    }

    /**
     * @param {Number} frozenFunds
     */
    setFrozenFunds(frozenFunds) {
        this['frozenFunds'] = frozenFunds;
    }
    /**
     * @return {module:model/WithdrawResultStatus}
     */
    getStatus() {
        return this.status;
    }

    /**
     * @param {module:model/WithdrawResultStatus} status
     */
    setStatus(status) {
        this['status'] = status;
    }

}

WithdrawResult.RequiredProperties = ["status"];

/**
 * @member {Number} frozenFunds
 */
WithdrawResult.prototype['frozenFunds'] = undefined;

/**
 * @member {module:model/WithdrawResultStatus} status
 */
WithdrawResult.prototype['status'] = undefined;






export default WithdrawResult;