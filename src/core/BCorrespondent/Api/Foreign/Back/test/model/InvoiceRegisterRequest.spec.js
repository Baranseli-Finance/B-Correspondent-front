/**
 * BCorrespondent. Tag (v1.0.0). Commit (9e7bfa7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD.
        define(['expect.js', process.cwd() + '/src/index'], factory);
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        factory(require('expect.js'), require(process.cwd() + '/src/index'));
    } else {
        // Browser globals (root is window)
        factory(root.expect, root.BCorrespondentTagV100Commit9e7bfa7);
    }
}(this, function(expect, BCorrespondentTagV100Commit9e7bfa7) {
    'use strict';

    var instance;

    beforeEach(function() {
        instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
    });

    var getProperty = function(object, getter, property) {
        // Use getter method if present; otherwise, get the property directly.
        if (typeof object[getter] === 'function')
            return object[getter]();
        else
            return object[property];
    }

    var setProperty = function(object, setter, property, value) {
        // Use setter method if present; otherwise, set the property directly.
        if (typeof object[setter] === 'function')
            object[setter](value);
        else
            object[property] = value;
    }

    describe('InvoiceRegisterRequest', function() {
        it('should create an instance of InvoiceRegisterRequest', function() {
            // uncomment below and update the code to test InvoiceRegisterRequest
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be.a(BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest);
        });

        it('should have the property amount (base name: "amount")', function() {
            // uncomment below and update the code to test the property amount
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property buyer (base name: "buyer")', function() {
            // uncomment below and update the code to test the property buyer
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property buyerAddress (base name: "buyerAddress")', function() {
            // uncomment below and update the code to test the property buyerAddress
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property buyerPhoneNumber (base name: "buyerPhoneNumber")', function() {
            // uncomment below and update the code to test the property buyerPhoneNumber
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property buyerTaxId (base name: "buyerTaxId")', function() {
            // uncomment below and update the code to test the property buyerTaxId
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property countryISOCode (base name: "countryISOCode")', function() {
            // uncomment below and update the code to test the property countryISOCode
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property createdAt (base name: "createdAt")', function() {
            // uncomment below and update the code to test the property createdAt
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property currency (base name: "currency")', function() {
            // uncomment below and update the code to test the property currency
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property customerIdent (base name: "customerIdent")', function() {
            // uncomment below and update the code to test the property customerIdent
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property fee (base name: "fee")', function() {
            // uncomment below and update the code to test the property fee
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property invoiceIdent (base name: "invoiceIdent")', function() {
            // uncomment below and update the code to test the property invoiceIdent
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property paymentDescription (base name: "paymentDescription")', function() {
            // uncomment below and update the code to test the property paymentDescription
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property seller (base name: "seller")', function() {
            // uncomment below and update the code to test the property seller
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property sellerAddress (base name: "sellerAddress")', function() {
            // uncomment below and update the code to test the property sellerAddress
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property sellerPhoneNumber (base name: "sellerPhoneNumber")', function() {
            // uncomment below and update the code to test the property sellerPhoneNumber
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property sellerTaxId (base name: "sellerTaxId")', function() {
            // uncomment below and update the code to test the property sellerTaxId
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

        it('should have the property vat (base name: "vat")', function() {
            // uncomment below and update the code to test the property vat
            //var instance = new BCorrespondentTagV100Commit9e7bfa7.InvoiceRegisterRequest();
            //expect(instance).to.be();
        });

    });

}));