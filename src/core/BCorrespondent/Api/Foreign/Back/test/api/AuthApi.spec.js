/**
 * BCorrespondent. Tag (v1.0.0). Commit (9e7bfa7)
 * BCorrespondent server api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: fclaw007@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD.
        define(['expect.js', process.cwd() + '/src/index'], factory);
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        factory(require('expect.js'), require(process.cwd() + '/src/index'));
    } else {
        // Browser globals (root is window)
        factory(root.expect, root.BCorrespondentTagV100Commit9e7bfa7);
    }
}(this, function(expect, BCorrespondentTagV100Commit9e7bfa7) {
    'use strict';

    var instance;

    beforeEach(function() {
        instance = new BCorrespondentTagV100Commit9e7bfa7.AuthApi();
    });

    var getProperty = function(object, getter, property) {
        // Use getter method if present; otherwise, get the property directly.
        if (typeof object[getter] === 'function')
            return object[getter]();
        else
            return object[property];
    }

    var setProperty = function(object, setter, property, value) {
        // Use setter method if present; otherwise, set the property directly.
        if (typeof object[setter] === 'function')
            object[setter](value);
        else
            object[property] = value;
    }

    describe('AuthApi', function() {
        describe('authCodePut', function() {
            it('should call authCodePut successfully', function(done) {
                //uncomment below and update the code to test authCodePut
                //instance.authCodePut(function(error) {
                //  if (error) throw error;
                //expect().to.be();
                //});
                done();
            });
        });
        describe('authCodeResendPut', function() {
            it('should call authCodeResendPut successfully', function(done) {
                //uncomment below and update the code to test authCodeResendPut
                //instance.authCodeResendPut(function(error) {
                //  if (error) throw error;
                //expect().to.be();
                //});
                done();
            });
        });
        describe('authLoginAuthTypePost', function() {
            it('should call authLoginAuthTypePost successfully', function(done) {
                //uncomment below and update the code to test authLoginAuthTypePost
                //instance.authLoginAuthTypePost(function(error) {
                //  if (error) throw error;
                //expect().to.be();
                //});
                done();
            });
        });
        describe('authLogoutPost', function() {
            it('should call authLogoutPost successfully', function(done) {
                //uncomment below and update the code to test authLogoutPost
                //instance.authLogoutPost(function(error) {
                //  if (error) throw error;
                //expect().to.be();
                //});
                done();
            });
        });
        describe('authPasswordResetLinkPut', function() {
            it('should call authPasswordResetLinkPut successfully', function(done) {
                //uncomment below and update the code to test authPasswordResetLinkPut
                //instance.authPasswordResetLinkPut(function(error) {
                //  if (error) throw error;
                //expect().to.be();
                //});
                done();
            });
        });
        describe('authPasswordResetPost', function() {
            it('should call authPasswordResetPost successfully', function(done) {
                //uncomment below and update the code to test authPasswordResetPost
                //instance.authPasswordResetPost(function(error) {
                //  if (error) throw error;
                //expect().to.be();
                //});
                done();
            });
        });
        describe('authTokenGenerateKeyPost', function() {
            it('should call authTokenGenerateKeyPost successfully', function(done) {
                //uncomment below and update the code to test authTokenGenerateKeyPost
                //instance.authTokenGenerateKeyPost(function(error) {
                //  if (error) throw error;
                //expect().to.be();
                //});
                done();
            });
        });
    });

}));